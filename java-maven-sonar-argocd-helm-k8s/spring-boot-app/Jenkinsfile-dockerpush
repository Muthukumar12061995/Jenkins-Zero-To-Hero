pipeline 
{
   agent 
   {
    docker {
        image 'abhishekf5/maven-abhishek-docker-agent:v1'
        args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
   }
  //  environment 
  //  {
  //    REGISTRY = "mk1206/ultimate-cicd"
  //    REGISTRY_CREDENTIALS = 'docker-cred'
  //    DOCKER_IMAGE = "mk1206/ultimate-cicd:${BUILD_NUMBER}"
  //  }
   stages
   {
    stage('build')
    {
        steps {
            sh 'echo "building"'
            // build the project and create a JAR file
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
        }
    }
    stage('dockerization')
    {
      environment 
      {
        REGISTRY = "mk1206/ultimate-cicd"
        REGISTRY_CREDENTIALS = 'docker-cred'
        DOCKER_IMAGE = "${REGISTRY}:${BUILD_NUMBER}"
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "${REGISTRY_CREDENTIALS}") {
                dockerImage.push()
            }
        }
      }
    }

   }
}

